server:
  port: 8080

spring:
  application:
    name: "accounts"
  profiles:
    active: "default"
  config:
    import: "optional:configserver:http://localhost:8071/"
  datasource: # after, this will be written by Kubernates envs
    url: jdbc:mysql://localhost:3306/sbdb-db-accounts
    username: root
    password: root
  jpa:
    show-sql: true
  sql:
    init:
      mode: always
  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health: # libera os endpoints para readness e liveness que serão usados para verificar se microsserviço está operante (...8071/actuator/health)
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint: # for deregister from eureka server when the microservice shutdown
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info: # info related actuator url
    env:
      enabled: true

endpoints: # for deregister from eureka server when the microservice shutdown
  shutdown:
    enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info: # eureka server dashboard info
  app:
    name: "accounts"
    description: "Spring Boot Demo Bank - Microservice - Accounts"
    version: "1.0.0"

logging:
  level:
    com:
      artcorb:
        accounts: DEBUG

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 10
        permitted-number-of-calls-in-half-open-state: 2
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10000
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 500
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
        ignore-exceptions: # ignore retry if the list of exceptions below occurs
          - java.lang.NullPointerException
      